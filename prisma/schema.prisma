datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum AdditionalChannels {
  MESH_THREAD
}

enum ConfirmationMethod {
  EMAIL
  FAX
}

enum CreditApproval {
  REGULAR
  ACH
  CHECK_FOR_MONEY
  HOLD
  CHECK_ON_DELIVERY
}

enum OrderStatus {
  PENDING
  CONFIRMING
  COMPLETE
}

enum OrderType {
  ADD__ON
  BACK_ORDER
  DELIVERY
  PICK_UP_AND_COUNT
  PRICE_QUOTE
  SPECIAL
  WILL_CALL
}

enum PermissionModel {
  USER
  ORDER
  CUSTOMER
  PERMISSION
  ROLE
}

enum PermissionVerb {
  CREATE
  READ
  UPDATE
  DELETE
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  password        String
  tempCode        String?
  tempCodeExpires DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  firstName       String?
  lastName        String?
  settings        Json
  roles           Role[]
  orders          Order[]

}

model Order {
  createdOn   DateTime    @default(now())
  creator     User        @relation(fields: [creatorId], references: [id])
  creatorId   Int
  customerId  Int
  customer    Customer    @relation(fields: [customerId], references: [id])
  id          Int         @id @default(autoincrement())
  history     Json
  isActive    Boolean     @default(true)
  notes       String?
  orderNumber Int
  orderStatus OrderStatus
  orderType   OrderType
}

model Customer {
  id       Int     @id @default(autoincrement())
  name     String
  site     String?
  PONumber String?
  orders   Order[]
}

model Permission {
  id       Int             @id @default(autoincrement())
  verb     PermissionVerb
  resource PermissionModel
  own      Boolean         @default(true)
  roles    Role[]
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String
  permissions Permission[]
  users       User[]
}
